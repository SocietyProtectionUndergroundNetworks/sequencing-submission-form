# Python image to use.
FROM python:3.11-alpine

ARG FLASK_PROCESS_USER
ARG FLASK_PROCESS_USER_ID
ARG FLASK_PROCESS_GROUP_ID
ARG ENVIRONMENT=production
ENV ENVIRONMENT=${ENVIRONMENT}

# Install necessary build dependencies
RUN apk update && \
    apk add --no-cache bash && \
    apk add --no-cache \
        build-base \
        python3-dev \
        linux-headers \
        musl-dev \
        mysql-dev \
        openjdk8 \
        perl \
        rclone 

# Set environment variable for Java 8
ENV JAVA_HOME=/usr/lib/jvm/default-jvm

# Download and install fastqc
WORKDIR /usr/local/bin
RUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.12.1.zip -O fastqc.zip && \
    unzip fastqc.zip && \
    chmod +x FastQC/fastqc && \
    ln -s /usr/local/bin/FastQC/fastqc /usr/local/bin/fastqc

# Set FastQC in the PATH  
ENV PATH="/usr/local/bin/FastQC:${PATH}"    

# Create a non-root user and add it to the docker group
RUN addgroup -S docker && \
    addgroup -g $FLASK_PROCESS_GROUP_ID $FLASK_PROCESS_USER && \
    adduser -D -u $FLASK_PROCESS_USER_ID -G docker $FLASK_PROCESS_USER

# Set the working directory to /app
WORKDIR /app

# Change ownership of the application directory to the non-root user
RUN chown -R $FLASK_PROCESS_USER:$FLASK_PROCESS_GROUP_ID /app

# Copy the requirements file used for dependencies
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
RUN pip install --trusted-host pypi.python.org -r requirements.txt

# Use the specified user to run the Flask app
USER $FLASK_PROCESS_USER

# Run the app using Gunicorn
CMD exec gunicorn --bind 0.0.0.0:56733 app:app --workers ${GUNICORN_WORKERS} --threads 2 ${GUNICORN_RELOAD}
