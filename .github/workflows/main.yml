name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1


      - name: Log in to GHCR
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Prepare test files and folders
        run: |
          touch app.log
          chmod 666 app.log
          mkdir -p seq_processed
          chmod -R 777 seq_processed
          mkdir -p seq_uploads
          chmod -R 777 seq_uploads
          mkdir -p flask_session
          chmod -R 777 flask_session
      - name: Run integration tests with Docker Compose
        run: docker compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from flask_test

  deploy_to_server:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Set up SSH and copy code to server
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.SERVER_DEPLOYMENT_IP }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SERVER_DEPLOYMENT_PRIVATE_KEY }}" > ~/private_key_file
          chmod 600 ~/private_key_file
          scp -i ~/private_key_file -o UserKnownHostsFile=~/.ssh/known_hosts -r ./* ${{ secrets.SERVER_DEPLOYMENT_USERNAME }}@${{ secrets.SERVER_DEPLOYMENT_IP }}:${{ secrets.SERVER_DEPLOYMENT_APP_DIRECTORY }}
          ssh -i ~/private_key_file -o UserKnownHostsFile=~/.ssh/known_hosts ${{ secrets.SERVER_DEPLOYMENT_USERNAME }}@${{ secrets.SERVER_DEPLOYMENT_IP }} "cd ${{ secrets.SERVER_DEPLOYMENT_APP_DIRECTORY }} && make migrate"
